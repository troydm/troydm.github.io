<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: perl | Troydm's Blog]]></title>
  <link href="http://troydm.github.io/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://troydm.github.io/"/>
  <updated>2013-07-22T23:33:33+04:00</updated>
  <id>http://troydm.github.io/</id>
  <author>
    <name><![CDATA[Dmitry Geurkov]]></name>
    <email><![CDATA[d.geurkov@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Writting IRC Bot using Perl 5 and POCO::IRC]]></title>
    <link href="http://troydm.github.io/blog/2013/07/22/writting-irc-bot-using-perl-5-and-poco-irc/"/>
    <updated>2013-07-22T21:29:00+04:00</updated>
    <id>http://troydm.github.io/blog/2013/07/22/writting-irc-bot-using-perl-5-and-poco-irc</id>
    <content type="html"><![CDATA[<p>Some people use <a href="https://en.wikipedia.org/wiki/Internet_Relay_Chat">IRC</a> to chat, some don't.
It was invented a really long time ago and isn't going away anytime soon despite some new generation alternatives poping up like <a href="http://www.jabber.org/">Jabber</a>.</p>

<p>Personally i always have my irc client running (i'm using <a href="http://weechat.org/">weechat</a> + <a href="http://tmux.sourceforge.net/">tmux</a>) and chat with lots of interesting people
who inspire me to try new technologies and learn something different every day. One person, who's nick i won't name, was always telling me about how awesome <a href="http://perl.org/" title="Perl">Perl</a>
as a programming language is and how great it's potential is thanks to <a href="http://cpan.org" title="CPAN">CPAN</a> that has almost 124k modules for any life situation.
I always thought he was exaggerating and literally acting like a perl fanboy, but <a href="http://perl.org/" title="Perl">Perl</a> was the first programming language i've learned back in the late 90's
and remembering how frustuating my experience with it was and how cryptic it really was for me do something with it when i was unexperienced and lacked lots of qualities that make up a
any decent software engineer. Well, time passed, time always passes, and i haven't written anything more than quick 50 line server scripts in <a href="http://perl.org/" title="Perl">Perl</a> for almost 13 years.
I've almost forgotten everything about <a href="http://perl.org/" title="Perl">Perl</a>. Since lately i was having this crazy idea about writing irc bot that could store and execute shell scripts on server
so i could automate my servers through irc, i thought why not write it in <a href="http://perl.org/" title="Perl">Perl</a>. I've remembered that person who was always bragging about <a href="http://perl.org/" title="Perl">Perl</a>'s greatness wrote an irc bot in <a href="http://perl.org/" title="Perl">Perl</a>
using <a href="https://metacpan.org/module/POE::Component::IRC" title="POCO::IRC">POE::Component::IRC</a> so i've decided to try and use it. It's based on really popular <a href="https://metacpan.org/module/POE" title="POE">POE</a> event loop framework which is very easy to learn and use.</p>

<p><img src="http://i.imgur.com/kiqhDBH.jpg" alt="Chobits" /></p>

<p>Before we'll start writing our <a href="http://perl.org/" title="Perl">Perl</a> IRC bot we need some way to store configuration for it. Since <a href="http://cpan.org" title="CPAN">CPAN</a> has lots of modules that deal with configuration the choice wasn't an easy one but
i've decided to use <a href="https://metacpan.org/module/YAML">YAML</a> which is module for loading <a href="http://yaml.org" title="YAML">YAML</a> objects into <a href="http://perl.org/" title="Perl">Perl</a> that can work the other way too. <a href="http://yaml.org" title="YAML">YAML</a> is a simple markup language
that is perfect for storing configuration and it's really quick to learn. For loading YAML configuration i've used <strong>LoadFile</strong> function and to store <a href="http://perl.org/" title="Perl">Perl</a> objects back into file i've used <strong>DumpFile</strong> function.
Just two simple functions that do all the complex work work for me. Since i wanted to store commands in the same file i just used <a href="http://perl.org/" title="Perl">Perl</a>'s list construct to specify that i'm loading two seperate <a href="http://yaml.org" title="YAML">YAML</a> documents.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;</span><span class="n">Loading</span> <span class="n">configuration</span><span class="sr">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="k">my</span> <span class="p">(</span><span class="nv">$config</span><span class="p">,</span> <span class="nv">$commands</span><span class="p">)</span> <span class="o">=</span> <span class="n">LoadFile</span><span class="p">(</span><span class="nv">$config_file</span><span class="p">)</span><span class="sr">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;</span><span class="o">||</span> <span class="nb">die</span> <span class="s">&quot;invalid configuration file specified&quot;</span><span class="p">;</span>
</span><span class='line'><span class="sr">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;</span><span class="n">Storing</span> <span class="n">configuration</span><span class="sr">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span><span class="n">DumpFile</span><span class="p">(</span><span class="nv">$config_file</span><span class="p">,</span> <span class="p">(</span><span class="nv">$config</span><span class="p">,</span> <span class="nv">$commands</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
